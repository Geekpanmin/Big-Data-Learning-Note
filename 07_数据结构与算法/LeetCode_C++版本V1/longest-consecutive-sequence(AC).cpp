// 1AC, excellent!!!#include <unordered_map>using namespace std;class Solution {public:    int longestConsecutive(vector<int> &num) {        // IMPORTANT: Please reset any member data you declared, as        // the same Solution instance will be reused for each test case.        int res, max_res;        unordered_map<int, int> a, b;                a.clear();        b.clear();                int n = num.size();        if(n <= 0){            return 0;        }                int i, j;        for(i = 0; i < n; ++i){            a[num[i]] = 1;        }                max_res = 0;        for(i = 0; i < n; ++i){            res = 0;            if(b.find(num[i]) != b.end()){                continue;            }            b[num[i]] = 1;            ++res;            j = num[i] - 1;            while(a.find(j) != a.end() && b.find(j) == b.end()){                b[j] = 1;                ++res;                --j;            }            j = num[i] + 1;            while(a.find(j) != a.end() && b.find(j) == b.end()){                b[j] = 1;                ++res;                ++j;            }                        if(res > max_res){                max_res = res;            }        }                a.clear();        b.clear();                return max_res;    }};