// 1CE, 1AC, just try to avoid spelling error, OK?class Solution {public:    int singleNumber(int A[], int n) {        // IMPORTANT: Please reset any member data you declared, as        // the same Solution instance will be reused for each test case.        if(n <= 0){            return 0;        }                int i;        int a1, a2;        int b;                a1 = a2 = b = 0;        for(i = 0; i < n; ++i){            // notice: not a2 = (a1 & A[i]);            // 1CE here, not a[], but A[]            a2 |= (a1 & A[i]);            a1 = (a1 ^ A[i]);            b = ~(a1 & a2);            a1 &= b;            a2 &= b;        }        // all bits of '1' appear for 3k + 1 or 3k times, thus the remaining one is the result.        return a1;    }};